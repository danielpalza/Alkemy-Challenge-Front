[{"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js":"1","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js":"2","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js":"3","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js":"4","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js":"5","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ProtectedRoute.js":"6","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Login.js":"7","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js":"8"},{"size":220,"mtime":1612377246416,"results":"9","hashOfConfig":"10"},{"size":1366,"mtime":1612396805039,"results":"11","hashOfConfig":"10"},{"size":566,"mtime":1612382084389,"results":"12","hashOfConfig":"10"},{"size":127,"mtime":1612379488135,"results":"13","hashOfConfig":"10"},{"size":991,"mtime":1612389647399,"results":"14","hashOfConfig":"10"},{"size":502,"mtime":1612388464175,"results":"15","hashOfConfig":"10"},{"size":1089,"mtime":1612395816133,"results":"16","hashOfConfig":"10"},{"size":692,"mtime":1612394199919,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pnplt4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js",[],["38","39"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js",["40","41","42"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js",["43"],"import Fetch from \"../services/Fetch\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Add() {\r\n  return (\r\n    <form onSubmit={console.log(\"enviado\")}>\r\n      <input name=\"tipo\" placeholder=\"Tipo\" type=\"text\" />\r\n      <input name=\"concepto\" placeholder=\"Concepto\" type=\"text\" />\r\n      <input name=\"monto\" placeholder=\"Monto\" type=\"text\" />\r\n      <input name=\"fecha\" placeholder=\"Fecha\" type=\"text\" />\r\n      <input type=\"submit\" value=\"Enviar\" />\r\n      <Link to=\"/\"><button>Regresar a inicio</button></Link>  \r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ProtectedRoute.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Login.js",["44"],"import Fetch from \"../services/Fetch\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Login(p) {\r\n    \r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleSubmit = (e) => {\r\n    Fetch(\"POST\", \"/usuario/login\", user, \"\", handleResponse);\r\n  };\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const handleResponse = (e) => {\r\n    localStorage.setItem(\"token\", e.response.token);\r\n\r\n    if (e.status === \"ok\") {\r\n      p.isLogin(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"bg-green-300 flex justify-around p-4\">\r\n        <input\r\n          name=\"email\"\r\n          placeholder=\"Email...\"\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          placeholder=\"ContraseÃ±a...\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n        />\r\n        <input type=\"button\" onClick={handleSubmit} value=\"Enviar\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js",["45","46"],"\r\nexport default function Fetch(method, url, body={}, token=\"\", action={}){\r\n    let urlRoot = \"http://localhost:4000\"+url //Cambiar a la url donde se alojara la API\r\n    let xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.open(method, urlRoot, true);\r\n    console.log(\"fetch:\",body)\r\n  \r\n    xmlhttp.onreadystatechange = function() \r\n    {\r\n        if (this.readyState == 4 && this.status == 200) \r\n        {\r\n            typeof action == 'function' && action(JSON.parse(this.responseText)) \r\n         \r\n           \r\n        }\r\n    };\r\n    xmlhttp.setRequestHeader(\"token\", token);\r\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xmlhttp.send( JSON.stringify(body) );\r\n}",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":23,"column":29,"nodeType":"53","messageId":"54","endLine":23,"endColumn":31},{"ruleId":"51","severity":1,"message":"52","line":23,"column":49,"nodeType":"53","messageId":"54","endLine":23,"endColumn":51},{"ruleId":"51","severity":1,"message":"52","line":24,"column":55,"nodeType":"53","messageId":"54","endLine":24,"endColumn":57},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"59","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":10,"column":29,"nodeType":"53","messageId":"54","endLine":10,"endColumn":31},{"ruleId":"51","severity":1,"message":"52","line":10,"column":49,"nodeType":"53","messageId":"54","endLine":10,"endColumn":51},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Fetch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]