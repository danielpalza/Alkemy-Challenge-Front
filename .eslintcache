[{"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js":"1","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js":"2","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js":"3","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js":"4","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js":"5","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js":"6","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js":"7","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js":"8","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js":"9","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Update.js":"10","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Delete.js":"11"},{"size":220,"mtime":1612377246416,"results":"12","hashOfConfig":"13"},{"size":1334,"mtime":1612534391337,"results":"14","hashOfConfig":"13"},{"size":3093,"mtime":1612537659239,"results":"15","hashOfConfig":"13"},{"size":2431,"mtime":1612555167926,"results":"16","hashOfConfig":"13"},{"size":1239,"mtime":1612630899550,"results":"17","hashOfConfig":"13"},{"size":735,"mtime":1612474364620,"results":"18","hashOfConfig":"13"},{"size":2376,"mtime":1612532044725,"results":"19","hashOfConfig":"13"},{"size":1913,"mtime":1612532001456,"results":"20","hashOfConfig":"13"},{"size":478,"mtime":1612531991574,"results":"21","hashOfConfig":"13"},{"size":2858,"mtime":1612630513442,"results":"22","hashOfConfig":"13"},{"size":1619,"mtime":1612555253718,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pnplt4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js",[],["53","54"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js",["55","56","57","58","59","60","61"],"import Main from \"./componentes/Main\";\nimport {useState,useEffect, Fragment} from \"react\"\nimport Inicio from \"./componentes/Inicio\";\n\n\nfunction App() {\n  \n  let [isLogin, setIsLogin] = useState(false)\n\n\n  //Comprabacion del token\n  const Auth = () => {\n    if (localStorage.getItem(\"token\")) {\n      let urlRoot = \"http://localhost:4000/usuario/auth\"; //Cambiar a la url donde se alojara la API\n      let xmlhttp = new XMLHttpRequest();\n      xmlhttp.open(\"GET\", urlRoot, true);\n      xmlhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          localStorage.setItem(\"token\", JSON.parse(this.responseText).response.token);\n          console.log(\"response app: \", JSON.parse(this.responseText).response.token)\n          setIsLogin(true)\n        }\n        if (this.readyState == 4 && this.status == 500 || this.status == 403){\n          setIsLogin(false)\n        }\n      };\n      xmlhttp.setRequestHeader(\"token\", localStorage.getItem(\"token\")? localStorage.getItem(\"token\"): \"\");\n      xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlhttp.send();\n    }\n  };\n\n  useEffect(()=>{\n    Auth()\n  },[])\n  \n  \n\n\n  return (\n      <Fragment>\n        {isLogin ? <Main isLogin={setIsLogin}/> : <Inicio isLogin={setIsLogin}/>}\n      </Fragment>  \n  );\n}\n\nexport default App;\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js",["62","63","64","65"],"import Fetch from \"../services/Fetch\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction Add(p) {\r\n  const [operacion, setOperacion] = useState({\r\n    tipo: \"Ingreso\",\r\n    concepto: \"\",\r\n    monto: \"\",\r\n    fecha: \"\",\r\n  });\r\n  \r\n  const handleAdd = () => {\r\n    if (Object.values(operacion).every((a) => a.length > 0)) {\r\n      Fetch(\r\n        \"POST\",\r\n        \"/operacion/createOperacion\",\r\n        { ...operacion, monto: parseInt(operacion.monto) },\r\n        localStorage.getItem(\"token\"),\r\n        handleResponse\r\n      );\r\n    } else {\r\n      alert(\"Debe completar todos los campos\");\r\n    }\r\n  };\r\n\r\n  const handleResponse = (e) => {\r\n    if (e.status == \"ok\") {\r\n      alert(\"Operacion creada\");\r\n      p.handleRender(false)\r\n      \r\n    }\r\n    if (e.status == \"Error\") {\r\n      alert(\"No se pudo crear la operacion\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setOperacion({ ...operacion, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(\"operacion: \", operacion)\r\n  return (\r\n    <div className=\"flex justify-center h-2/4 items-center\">\r\n      <div className=\"m-5 rounded w-1/4 bg-green-300 flex flex-col p-5 text-center font-sans\">\r\n        <h2 className=\"text-2xl\">Agregar operacion</h2>\r\n        <input\r\n          name=\"concepto\"\r\n          className=\"m-5 p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Concepto\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"monto\"\r\n          className=\"m-5 p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Monto\"\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          name=\"fecha\"\r\n          className=\"m-5 p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Fecha\"\r\n          type=\"date\"\r\n        />\r\n\r\n        <div className=\"flex m-5\">\r\n          <label>\r\n            <input\r\n              name=\"tipo\"\r\n              checked={operacion.tipo == \"Ingreso\" ? true : false}\r\n              className=\"m-5 p-2\"\r\n              onChange={handleChange}\r\n              value=\"Ingreso\"\r\n              type=\"radio\"\r\n            />\r\n            Ingreso\r\n          </label>\r\n          <label>\r\n            <input\r\n              name=\"tipo\"\r\n              checked={operacion.tipo == \"Egreso\" ? true : false}\r\n              className=\"m-5 p-2\"\r\n              onChange={handleChange}\r\n              value=\"Egreso\"\r\n              type=\"radio\"\r\n            />\r\n            Egreso\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <button\r\n            onClick={() => handleAdd()}\r\n            className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Crear\r\n          </button>\r\n          \r\n          <button onClick={()=>p.handleRender()} className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n              Regresar a inicio\r\n          </button>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js",["66","67"],"import { useState, useEffect } from \"react\";\r\nimport Fetch from \"../services/Fetch\";\r\nimport Update from \"./ListComponents/Update\";\r\nimport Delete from \"./ListComponents/Delete\";\r\n\r\nfunction List() {\r\n  const [opr, setOpr] = useState([]);\r\n  const [list, setList] = useState([]);\r\n  const [lbm, setLBM] = useState(\"L\");\r\n  const [body, setBody] = useState();\r\n\r\n  const handleResponse = (e) => {\r\n    setOpr(e.response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Fetch(\r\n      \"GET\",\r\n      \"/operacion/getOperaciones\",\r\n      {},\r\n      localStorage.getItem(\"token\"),\r\n      handleResponse\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const firstLetterUpperCase = (str) =>\r\n      str.charAt(0).toUpperCase().concat(str.substring(1, str.length));\r\n    const dateFormat = (date) => date.split(\"-\").reverse().join(\"/\");\r\n    if (opr.length > 0) {\r\n      setList(\r\n        opr.map((a) => {\r\n          const loadBody=(b)=>{\r\n            setLBM(b)\r\n            setBody(a)\r\n          }  \r\n          return (\r\n            <li key={a.id_operacion}>\r\n              <div className=\"flex justify-between bg-green-200 text-lg  rounded p-5 m-5 \">\r\n                <p className=\"text-xl\">{a.tipo}</p>\r\n                <p className=\"text-xl\">{firstLetterUpperCase(a.concepto)}</p>\r\n                <div className=\"flex\">\r\n                  <div className=\"m-2\">\r\n                    <p>${a.monto}</p>\r\n                    <p>{dateFormat(a.fecha)}</p>\r\n                  </div>\r\n                  <div className=\"m-2\">\r\n                    <button onClick={()=>loadBody(\"B\")} className=\"bg-green-300 p-3 m-2 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n                      Eliminar\r\n                    </button>\r\n                    <button  onClick={()=>loadBody(\"M\")} className=\"bg-green-300 p-3 m-2  rounded-md text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n                      Modificar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [opr]);\r\n\r\n  return lbm == \"L\" ? (\r\n    <ul>{list.length > 0 && list.map((a) => a)}</ul>\r\n  ) : lbm == \"M\" ? (\r\n    <Update body={body} setOpr={setOpr} opr={opr} setLBM={setLBM} />\r\n  ) : (\r\n    <Delete body={body} setOpr={setOpr} opr={opr} setLBM={setLBM} />\r\n  );\r\n}\r\n\r\nexport default List;\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js",["68","69","70","71"],"export default function Fetch(method, url, body = {}, token = \"\", action = {}) {\r\n  let urlRoot = \"http://localhost:4000\" + url; //Cambiar a la url donde se alojara la API\r\n  let xmlhttp = new XMLHttpRequest();\r\n  xmlhttp.open(method, urlRoot, true);\r\n  console.log(\"fetch:\", body, action);\r\n\r\n  xmlhttp.onreadystatechange = function () {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      typeof action == \"function\" && action(JSON.parse(this.responseText));\r\n    }\r\n    if (this.readyState == 4 && this.status == 413) {\r\n      action({ status: \"Error\" });\r\n    }\r\n  };\r\n  xmlhttp.setRequestHeader(\"token\", token);\r\n  xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  xmlhttp.send(JSON.stringify(body));\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js",["72"],"import Fetch from \"../../services/Fetch\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function Register(p) {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmacion: \"\",\r\n  });\r\n \r\n  const handleRegister = (e) => {\r\n      if(user.password==user.confirmacion ){\r\n        if(user.password.length>0 && user.email.length>0)  \r\n        {\r\n            Fetch(\"POST\", \"/usuario/createUser\", user, \"\", handleResponse);\r\n        }\r\n        else{\r\n            alert(\"Debe completar todos los campos\")\r\n        }\r\n      }else{\r\n          alert(\"Las contraseñas no son identicas\")\r\n      }\r\n    \r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const handleResponse = (e) => {\r\n   console.log(\"register response: \",e )\r\n    if (e.status === \"ok\") {\r\n        alert(\"Usuario creado\")\r\n        p.handleRender()\r\n              \r\n    }\r\n    if(e.status===\"Error\"){\r\n        alert(\"El email ya esta registrado\")\r\n    }\r\n  };\r\n\r\n  return (\r\n      \r\n    <div className=\"flex justify-center h-screen items-center\">\r\n      <div className=\"rounded w-1/4 bg-green-300 flex flex-col p-10\">\r\n        <input\r\n          name=\"email\"\r\n          placeholder=\"Email...\"\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          className=\"p-2  m-10\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          placeholder=\"Contraseña...\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          className=\"m-10 p-2\"\r\n        />\r\n        <input\r\n          name=\"confirmacion\"\r\n          placeholder=\"Confirme contraseña...\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          className=\"m-10 p-2\"\r\n        />\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <button\r\n            onClick={()=>handleRegister()}\r\n            className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Registrarse\r\n          </button>\r\n         \r\n            <button onClick={()=>p.handleRender()} className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n              Iniciar sesion\r\n            </button>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Update.js",["73","74","75"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Delete.js",["76","77","78"],"import Fetch from \"../../services/Fetch\"\r\n\r\nexport default function Delete(p){\r\n\r\n    const handleDelete=()=>{\r\n        console.log(p.body)\r\n\r\n        Fetch(\r\n            \"POST\",\r\n            \"/operacion/deleteOperacion\",\r\n            { id_operacion:p.body.id_operacion },\r\n            localStorage.getItem(\"token\"),\r\n            handleResponse)\r\n    }\r\n    \r\n    const handleResponse = (e) => {\r\n        if (e.status == \"ok\") {\r\n          alert(\"Operacion borrada\");\r\n          p.setOpr(p.opr.filter(a=>a.id_operacion!=p.body.id_operacion))\r\n          p.setLBM(\"L\")\r\n          \r\n        }\r\n        if (e.status == \"Error\") {\r\n          alert(\"No se pudo crear la operacion\");\r\n        }\r\n      };\r\n    \r\n    return(\r\n        <div className=\"flex justify-center h-2/4 items-center\">\r\n        <div className=\"m-5 rounded w-1/4 bg-green-300 flex flex-col p-5 text-center font-sans\">\r\n         <h2 className=\"text-2xl\">¿Desea eliminar la operacion?</h2>\r\n                \r\n         <div className=\"flex flex-col justify-center items-center\">\r\n            <button\r\n              onClick={() => handleDelete()}\r\n              className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n            >\r\n              Eliminar\r\n            </button>\r\n            \r\n            <button onClick={()=>p.setLBM(\"L\")} className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n                Cancelar\r\n            </button>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":18,"column":29,"nodeType":"85","messageId":"86","endLine":18,"endColumn":31},{"ruleId":"83","severity":1,"message":"84","line":18,"column":49,"nodeType":"85","messageId":"86","endLine":18,"endColumn":51},{"ruleId":"83","severity":1,"message":"84","line":23,"column":29,"nodeType":"85","messageId":"86","endLine":23,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":23,"column":34,"nodeType":"89","messageId":"90","endLine":23,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":23,"column":49,"nodeType":"85","messageId":"86","endLine":23,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":23,"column":56,"nodeType":"89","messageId":"90","endLine":23,"endColumn":58},{"ruleId":"83","severity":1,"message":"84","line":23,"column":71,"nodeType":"85","messageId":"86","endLine":23,"endColumn":73},{"ruleId":"83","severity":1,"message":"84","line":28,"column":18,"nodeType":"85","messageId":"86","endLine":28,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":33,"column":18,"nodeType":"85","messageId":"86","endLine":33,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":73,"column":39,"nodeType":"85","messageId":"86","endLine":73,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":84,"column":39,"nodeType":"85","messageId":"86","endLine":84,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":64,"column":14,"nodeType":"85","messageId":"86","endLine":64,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":66,"column":11,"nodeType":"85","messageId":"86","endLine":66,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":8,"column":25,"nodeType":"85","messageId":"86","endLine":8,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":8,"column":45,"nodeType":"85","messageId":"86","endLine":8,"endColumn":47},{"ruleId":"83","severity":1,"message":"84","line":11,"column":25,"nodeType":"85","messageId":"86","endLine":11,"endColumn":27},{"ruleId":"83","severity":1,"message":"84","line":11,"column":45,"nodeType":"85","messageId":"86","endLine":11,"endColumn":47},{"ruleId":"83","severity":1,"message":"84","line":13,"column":23,"nodeType":"85","messageId":"86","endLine":13,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":30,"column":18,"nodeType":"85","messageId":"86","endLine":30,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":34,"column":30,"nodeType":"85","messageId":"86","endLine":34,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":48,"column":18,"nodeType":"85","messageId":"86","endLine":48,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":17,"column":22,"nodeType":"85","messageId":"86","endLine":17,"endColumn":24},{"ruleId":"83","severity":1,"message":"91","line":19,"column":50,"nodeType":"85","messageId":"86","endLine":19,"endColumn":52},{"ruleId":"83","severity":1,"message":"84","line":23,"column":22,"nodeType":"85","messageId":"86","endLine":23,"endColumn":24},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]