[{"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js":"1","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js":"2","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js":"3","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js":"4","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js":"5","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js":"6","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js":"7","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js":"8","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js":"9","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Update.js":"10","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Delete.js":"11"},{"size":220,"mtime":1612377246416,"results":"12","hashOfConfig":"13"},{"size":1334,"mtime":1612534391337,"results":"14","hashOfConfig":"13"},{"size":3093,"mtime":1612537659239,"results":"15","hashOfConfig":"13"},{"size":2379,"mtime":1612540569980,"results":"16","hashOfConfig":"13"},{"size":1231,"mtime":1612530931254,"results":"17","hashOfConfig":"13"},{"size":735,"mtime":1612474364620,"results":"18","hashOfConfig":"13"},{"size":2376,"mtime":1612532044725,"results":"19","hashOfConfig":"13"},{"size":1913,"mtime":1612532001456,"results":"20","hashOfConfig":"13"},{"size":478,"mtime":1612531991574,"results":"21","hashOfConfig":"13"},{"size":2379,"mtime":1612539397595,"results":"22","hashOfConfig":"13"},{"size":1062,"mtime":1612540665214,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pnplt4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js",[],["50","51"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js",["52","53","54","55","56","57","58"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js",["59","60","61","62"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js",["63","64"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js",["65","66","67","68"],"export default function Fetch(method, url, body = {}, token = \"\", action = {}) {\r\n  let urlRoot = \"http://localhost:4000\" + url; //Cambiar a la url donde se alojara la API\r\n  let xmlhttp = new XMLHttpRequest();\r\n  xmlhttp.open(method, urlRoot, true);\r\n  console.log(\"fetch:\", body, action);\r\n\r\n  xmlhttp.onreadystatechange = function () {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      typeof action == \"function\" && action(JSON.parse(this.responseText));\r\n    }\r\n    if (this.readyState == 4 && this.status == 413) {\r\n      action({ status: \"Error\" });\r\n    }\r\n  };\r\n  xmlhttp.setRequestHeader(\"token\", token);\r\n  xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  xmlhttp.send(JSON.stringify(body));\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js",["69"],"import Fetch from \"../../services/Fetch\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function Register(p) {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmacion: \"\",\r\n  });\r\n \r\n  const handleRegister = (e) => {\r\n      if(user.password==user.confirmacion ){\r\n        if(user.password.length>0 && user.email.length>0)  \r\n        {\r\n            Fetch(\"POST\", \"/usuario/createUser\", user, \"\", handleResponse);\r\n        }\r\n        else{\r\n            alert(\"Debe completar todos los campos\")\r\n        }\r\n      }else{\r\n          alert(\"Las contraseñas no son identicas\")\r\n      }\r\n    \r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const handleResponse = (e) => {\r\n   console.log(\"register response: \",e )\r\n    if (e.status === \"ok\") {\r\n        alert(\"Usuario creado\")\r\n        p.handleRender()\r\n              \r\n    }\r\n    if(e.status===\"Error\"){\r\n        alert(\"El email ya esta registrado\")\r\n    }\r\n  };\r\n\r\n  return (\r\n      \r\n    <div className=\"flex justify-center h-screen items-center\">\r\n      <div className=\"rounded w-1/4 bg-green-300 flex flex-col p-10\">\r\n        <input\r\n          name=\"email\"\r\n          placeholder=\"Email...\"\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          className=\"p-2  m-10\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          placeholder=\"Contraseña...\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          className=\"m-10 p-2\"\r\n        />\r\n        <input\r\n          name=\"confirmacion\"\r\n          placeholder=\"Confirme contraseña...\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          className=\"m-10 p-2\"\r\n        />\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <button\r\n            onClick={()=>handleRegister()}\r\n            className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Registrarse\r\n          </button>\r\n         \r\n            <button onClick={()=>p.handleRender()} className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n              Iniciar sesion\r\n            </button>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Update.js",["70","71"],"import Fetch from \"../../services/Fetch\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function Update(p) {\r\n  const [operacion, setOperacion] = useState({\r\n    \r\n    concepto: \"\",\r\n    monto: \"\",\r\n    fecha: \"\",\r\n  });\r\n  \r\n  const handleUpdate = () => {\r\n    if (Object.values(operacion).every((a) => a.length > 0)) {\r\n      Fetch(\r\n        \"POST\",\r\n        \"/operacion/updateOperacion\",\r\n        { ...operacion, monto: parseInt(operacion.monto) },\r\n        localStorage.getItem(\"token\"),\r\n        handleResponse\r\n      );\r\n    } else {\r\n      alert(\"Debe completar todos los campos\");\r\n    }\r\n  };\r\n\r\n  const handleResponse = (e) => {\r\n    if (e.status == \"ok\") {\r\n      alert(\"Operacion actualizada\");\r\n      \r\n      \r\n    }\r\n    if (e.status == \"Error\") {\r\n      alert(\"No se pudo actualizar la operacion\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setOperacion({ ...operacion, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(\"operacion: \", operacion)\r\n  return (\r\n    <div className=\"flex justify-center h-2/4 items-center\">\r\n      <div className=\"m-5 rounded w-1/4 bg-green-300 flex flex-col p-5 text-center font-sans\">\r\n        <h2 className=\"text-2xl\">Modificar operacion</h2>\r\n        <input\r\n          name=\"concepto\"\r\n          className=\"m-5 p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Concepto\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"monto\"\r\n          className=\"m-5 p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Monto\"\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          name=\"fecha\"\r\n          className=\"m-5 p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Fecha\"\r\n          type=\"date\"\r\n        />\r\n      \r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <button\r\n            onClick={() => handleUpdate()}\r\n            className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Actualizar\r\n          </button>\r\n          \r\n          <button onClick={()=>p.handleRender()} className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n              Cancelar\r\n          </button>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Delete.js",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":18,"column":29,"nodeType":"79","messageId":"80","endLine":18,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":18,"column":49,"nodeType":"79","messageId":"80","endLine":18,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":23,"column":29,"nodeType":"79","messageId":"80","endLine":23,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":23,"column":34,"nodeType":"83","messageId":"84","endLine":23,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":23,"column":49,"nodeType":"79","messageId":"80","endLine":23,"endColumn":51},{"ruleId":"81","severity":1,"message":"82","line":23,"column":56,"nodeType":"83","messageId":"84","endLine":23,"endColumn":58},{"ruleId":"77","severity":1,"message":"78","line":23,"column":71,"nodeType":"79","messageId":"80","endLine":23,"endColumn":73},{"ruleId":"77","severity":1,"message":"78","line":28,"column":18,"nodeType":"79","messageId":"80","endLine":28,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":33,"column":18,"nodeType":"79","messageId":"80","endLine":33,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":73,"column":39,"nodeType":"79","messageId":"80","endLine":73,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":84,"column":39,"nodeType":"79","messageId":"80","endLine":84,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":64,"column":14,"nodeType":"79","messageId":"80","endLine":64,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":66,"column":11,"nodeType":"79","messageId":"80","endLine":66,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":8,"column":25,"nodeType":"79","messageId":"80","endLine":8,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":8,"column":45,"nodeType":"79","messageId":"80","endLine":8,"endColumn":47},{"ruleId":"77","severity":1,"message":"78","line":11,"column":25,"nodeType":"79","messageId":"80","endLine":11,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":11,"column":45,"nodeType":"79","messageId":"80","endLine":11,"endColumn":47},{"ruleId":"77","severity":1,"message":"78","line":13,"column":23,"nodeType":"79","messageId":"80","endLine":13,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":28,"column":18,"nodeType":"79","messageId":"80","endLine":28,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":33,"column":18,"nodeType":"79","messageId":"80","endLine":33,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-unused-vars","'Fetch' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]