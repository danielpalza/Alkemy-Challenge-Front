[{"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js":"1","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js":"2","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js":"3","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js":"4","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js":"5","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js":"6","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js":"7","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js":"8","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js":"9","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Update.js":"10","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Delete.js":"11"},{"size":220,"mtime":1612377246416,"results":"12","hashOfConfig":"13"},{"size":1334,"mtime":1612534391337,"results":"14","hashOfConfig":"13"},{"size":3144,"mtime":1612718236053,"results":"15","hashOfConfig":"13"},{"size":3025,"mtime":1612743591624,"results":"16","hashOfConfig":"13"},{"size":2045,"mtime":1612743692723,"results":"17","hashOfConfig":"13"},{"size":709,"mtime":1612743019802,"results":"18","hashOfConfig":"13"},{"size":2536,"mtime":1612637404553,"results":"19","hashOfConfig":"13"},{"size":2050,"mtime":1612742786099,"results":"20","hashOfConfig":"13"},{"size":478,"mtime":1612531991574,"results":"21","hashOfConfig":"13"},{"size":2674,"mtime":1612718153289,"results":"22","hashOfConfig":"13"},{"size":1591,"mtime":1612718223775,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pnplt4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js",[],["56","57"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js",["58","59","60","61","62","63","64"],"import Main from \"./componentes/Main\";\nimport {useState,useEffect, Fragment} from \"react\"\nimport Inicio from \"./componentes/Inicio\";\n\n\nfunction App() {\n  \n  let [isLogin, setIsLogin] = useState(false)\n\n\n  //Comprabacion del token\n  const Auth = () => {\n    if (localStorage.getItem(\"token\")) {\n      let urlRoot = \"http://localhost:4000/usuario/auth\"; //Cambiar a la url donde se alojara la API\n      let xmlhttp = new XMLHttpRequest();\n      xmlhttp.open(\"GET\", urlRoot, true);\n      xmlhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          localStorage.setItem(\"token\", JSON.parse(this.responseText).response.token);\n          console.log(\"response app: \", JSON.parse(this.responseText).response.token)\n          setIsLogin(true)\n        }\n        if (this.readyState == 4 && this.status == 500 || this.status == 403){\n          setIsLogin(false)\n        }\n      };\n      xmlhttp.setRequestHeader(\"token\", localStorage.getItem(\"token\")? localStorage.getItem(\"token\"): \"\");\n      xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlhttp.send();\n    }\n  };\n\n  useEffect(()=>{\n    Auth()\n  },[])\n  \n  \n\n\n  return (\n      <Fragment>\n        {isLogin ? <Main isLogin={setIsLogin}/> : <Inicio isLogin={setIsLogin}/>}\n      </Fragment>  \n  );\n}\n\nexport default App;\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js",["65","66","67","68"],"import Fetch from \"../services/Fetch\";\r\nimport parseMoney from 'parse-money';\r\nimport { useState } from \"react\";\r\n\r\nfunction Add(p) {\r\n  const [opr, setOpr] = useState({\r\n    tipo: \"Ingreso\",\r\n    concepto: \"\",\r\n    monto: \"$\",\r\n    fecha: \"\",\r\n  });\r\n\r\n  const handleAdd = () => {\r\n    if (Object.values(opr).every((a) => a.length > 0)) {\r\n      Fetch(\r\n        \"POST\",\r\n        \"/operacion/createOperacion\",\r\n        { ...opr, monto: parseMoney(opr.monto).amount },\r\n        localStorage.getItem(\"token\"),\r\n        handleResponse\r\n      );\r\n     \r\n    } else {\r\n      alert(\"Debe completar todos los campos\");\r\n    }\r\n  };\r\n\r\n  const handleResponse = (e) => {\r\n    if (e.status == \"ok\") {\r\n      alert(\"Operacion creada\");\r\n      \r\n      p.handleRender(false);\r\n    }\r\n    if (e.status == \"Error\") {\r\n      alert(\"No se pudo crear la operacion\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setOpr({ ...opr, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"flex justify-center h-2/4 items-center\">\r\n      <div className=\"m-5 rounded w-auto h-auto md:h-auto bg-green-300 flex flex-col p-5 text-center font-sans\">\r\n        <h2 className=\"text-2xl\">Agregar operacion</h2>\r\n        <input\r\n          name=\"concepto\"\r\n          className=\"m-3  md:m-5  p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Concepto\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"monto\"\r\n          className=\"m-3  md:m-5  p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Monto\"\r\n          value={opr.monto}\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          name=\"fecha\"\r\n          className=\"m-3 md:m-5 p-2\"\r\n          onChange={handleChange}\r\n          placeholder=\"Fecha\"\r\n          type=\"date\"\r\n        />\r\n\r\n        <div className=\"flex m-2\">\r\n          <label>\r\n            <input\r\n              name=\"tipo\"\r\n              checked={opr.tipo == \"Ingreso\" ? true : false}\r\n              className=\"m-5 p-2\"\r\n              onChange={handleChange}\r\n              value=\"Ingreso\"\r\n              type=\"radio\"\r\n            />\r\n            Ingreso\r\n          </label>\r\n          <label>\r\n            <input\r\n              name=\"tipo\"\r\n              checked={opr.tipo == \"Egreso\" ? true : false}\r\n              className=\"m-5 p-2\"\r\n              onChange={handleChange}\r\n              value=\"Egreso\"\r\n              type=\"radio\"\r\n            />\r\n            Egreso\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <button\r\n            onClick={() => handleAdd()}\r\n            className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Crear\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => p.handleRender()}\r\n            className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Regresar a inicio\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js",["69","70","71"],"import { useState, useEffect } from \"react\";\r\nimport toMoney from 'number-to-money';\r\nimport Fetch from \"../services/Fetch\";\r\nimport Update from \"./ListComponents/Update\";\r\nimport Delete from \"./ListComponents/Delete\";\r\n\r\nfunction List(p) {\r\n \r\n  const [list, setList] = useState([]);\r\n  const [opr, setOpr] = useState([]);\r\n  const [ban, setBan] = useState(false)\r\n  const [lbm, setLBM] = useState(\"L\");\r\n  const [body, setBody] = useState();\r\n  \r\n  const def= <li key={1}>\r\n              <div className=\"flex flex-col md:flex-row justify-center bg-green-200 text-lg  rounded p-2 md:p-3 m-2 md:m-2 \">\r\n                <p className=\"text-xl\">Sin registros</p>\r\n              </div>\r\n            </li>;\r\n\r\n  const handleResponse = (e) => {\r\n    setOpr(e.response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Fetch(\r\n        \"GET\",\r\n        \"/operacion/getOperaciones\",\r\n        {},\r\n        localStorage.getItem(\"token\"),\r\n        handleResponse\r\n        );\r\n    p.setBan(!p.ban)    \r\n   \r\n}, [ban]);\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    \r\n    \r\n    const firstLetterUpperCase = (str) =>\r\n      str.charAt(0).toUpperCase().concat(str.substring(1, str.length));\r\n    const dateFormat = (date) => date.split(\"-\").reverse().join(\"/\");\r\n    if (opr.length > 0) {\r\n      //Render list\r\n      setList(\r\n        opr.map((a) => {\r\n          const loadBody=(b)=>{\r\n            setLBM(b)\r\n            setBody(a)\r\n          }  \r\n          return (\r\n            <li key={a.id_operacion}>\r\n              <div className=\"flex flex-col md:flex-row text-center justify-between bg-green-200 text-lg  rounded p-2 md:p-3 m-2 md:m-2 \">\r\n                <p className=\"text-xl\">{a.tipo}</p>\r\n                <p className=\"text-xl\">{firstLetterUpperCase(a.concepto)}</p>\r\n                <div className=\"flex bg-white rounded\">\r\n                  <div className=\"m-2 text-lg\">\r\n                    <p>${toMoney(parseInt(a.monto))}</p>\r\n                    <p>{dateFormat(a.fecha)}</p>\r\n                  </div>\r\n                  <div className=\"m-2\">\r\n                    <button onClick={()=>loadBody(\"B\")} className=\"bg-green-300 p-2 md:p-3 m-2 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n                      Eliminar\r\n                    </button>\r\n                    <button  onClick={()=>loadBody(\"M\")} className=\"bg-green-300  p-2 md:p-3 m-2  rounded-md text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n                      Modificar\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [opr]);\r\n\r\n  return lbm == \"L\" ? (\r\n    <ul>{list.length > 0 ? list.map((a) => a) : def }</ul>\r\n  ) : lbm == \"M\" ? (\r\n    <Update body={body} setBan={setBan} ban={ban} setOpr={setOpr} opr={opr} setLBM={setLBM} />\r\n  ) : (\r\n    <Delete body={body} setBan={setBan} ban={ban} setOpr={setOpr} opr={opr} setLBM={setLBM} />\r\n  );\r\n}\r\n\r\nexport default List;\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js",["72"],"\r\nimport Add from \"./Add\"\r\nimport List from \"./List\"\r\nimport Fetch from \"../services/Fetch\"\r\nimport toMoney from 'number-to-money';\r\nimport {Fragment,useState, useEffect } from \"react\"\r\n\r\n\r\nexport default function Main(e){\r\n    const [render, setRender] = useState(false)\r\n    const [ban, setBan] = useState(false)\r\n    const [balance, setBalance]= useState()\r\n\r\n    const handleRender= ()=>{\r\n        setRender(!render)\r\n    }\r\n    const handleLogOut=()=>{\r\n        localStorage.setItem(\"token\",\"\")\r\n        e.isLogin(false)\r\n    }\r\n    \r\n \r\n  const handleResponse = (e) => {\r\n    setBalance(e.response);\r\n    \r\n  };\r\n\r\n\r\n    useEffect(() => {\r\n            Fetch(\r\n                \"GET\",\r\n                \"/operacion/getBalance\",\r\n                {},\r\n                localStorage.getItem(\"token\"),\r\n                handleResponse\r\n            );\r\n      }, [ban]);\r\n\r\n      \r\n\r\n    return(\r\n        <Fragment>\r\n            <header className=\"bg-green-300 flex flex-col md:flex-row text-center justify-between p-4\">\r\n                <h1 className=\"text-3xl font-bold tracking-tight text-green-900 font-sans\">Administración</h1>\r\n                <div>\r\n                     <h1 className=\"text-2xl md:text-3x1 font-bold tracking-tight text-green-900 font-sans\">Balance: ${balance!=undefined&&toMoney(balance)}</h1>\r\n                </div>\r\n                <div>\r\n                    <button onClick={handleRender} className=\"m-2 bg-green-400 p-2 md:p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-500 hover:scale-110 duration-200\">Agregar operacion</button>\r\n                    <button onClick={handleLogOut} className=\" m-2 bg-green-400 p-2 md:p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-500 hover:scale-110 duration-200\">Cerrar sesion</button>\r\n                \r\n                </div>   \r\n            </header>\r\n            \r\n            <main>\r\n               {render?<Add handleRender={handleRender}/>:<List setBan={setBan} ban={ban} />}\r\n            </main>\r\n        </Fragment>\r\n        \r\n    )\r\n}","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js",["73","74","75","76"],"export default function Fetch(method, url, body = {}, token = \"\", action = {}) {\r\n  let urlRoot = \"http://localhost:4000\" + url; //Cambiar a la url donde se alojara la API\r\n  let xmlhttp = new XMLHttpRequest();\r\n  xmlhttp.open(method, urlRoot, true);\r\n  \r\n\r\n  xmlhttp.onreadystatechange = function () {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      typeof action == \"function\" && action(JSON.parse(this.responseText));\r\n    }\r\n    if (this.readyState == 4 && this.status == 413) {\r\n      action(JSON.parse(this.responseText));\r\n    }\r\n  };\r\n  xmlhttp.setRequestHeader(\"token\", token);\r\n  xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  xmlhttp.send(JSON.stringify(body));\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js",["77"],"import Fetch from \"../../services/Fetch\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function Register(p) {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmacion: \"\",\r\n  });\r\n \r\n  const handleRegister = (e) => {\r\n      if(user.password==user.confirmacion ){\r\n        if(user.password.length>0 && user.email.length>0)  \r\n        {\r\n            Fetch(\"POST\", \"/usuario/createUser\", user, \"\", handleResponse);\r\n        }\r\n        else{\r\n            alert(\"Debe completar todos los campos\")\r\n        }\r\n      }else{\r\n          alert(\"Las contraseñas no son identicas\")\r\n      }\r\n    \r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const handleResponse = (e) => {\r\n   console.log(\"register response: \",e )\r\n    if (e.status === \"ok\") {\r\n        alert(\"Usuario creado\")\r\n        p.handleRender()\r\n              \r\n    }\r\n    if(e.status===\"Error\"){\r\n        alert(\"El email ya esta registrado\")\r\n    }\r\n  };\r\n\r\n  return (\r\n      \r\n    <div className=\"flex justify-center h-screen items-center\">\r\n      <div className=\"rounded w-screen h-screen md:w-auto md:h-auto bg-green-300 flex flex-col text-center p-10\">\r\n        <h1 className=\"text-3xl font-bold tracking-tight text-green-900 font-sans\">Registro</h1>\r\n        <input\r\n          name=\"email\"\r\n          placeholder=\"Email...\"\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          className=\"p-2 m-5 md:m-8\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          placeholder=\"Contraseña...\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          className=\"m-5 md:m-8 p-2\"\r\n        />\r\n        <input\r\n          name=\"confirmacion\"\r\n          placeholder=\"Confirme contraseña...\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          className=\"m-5 sm:m-10 p-2\"\r\n        />\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <button\r\n            onClick={()=>handleRegister()}\r\n            className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Registrarse\r\n          </button>\r\n         \r\n            <button onClick={()=>p.handleRender()} className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n              Iniciar sesion\r\n            </button>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Update.js",["78","79"],"import Fetch from \"../../services/Fetch\";\r\nimport toMoney from 'number-to-money';\r\nimport parseMoney from 'parse-money';\r\nimport { useState } from \"react\";\r\n\r\nexport default function Update(p) {\r\n  const [opr, setOpr] = useState({\r\n    concepto: p.body.concepto,\r\n    monto: \"$\"+toMoney(p.body.monto),\r\n    fecha: p.body.fecha,\r\n  });\r\n\r\n  const handleUpdate = () => {\r\n    if (Object.values(opr).every((a) => a.length > 0)) {\r\n      Fetch(\r\n        \"POST\",\r\n        \"/operacion/updateOperacion\",\r\n        {\r\n          ...opr,\r\n          monto: parseMoney(opr.monto).amount,\r\n          id_operacion: p.body.id_operacion,\r\n        },\r\n        localStorage.getItem(\"token\"),\r\n        handleResponse\r\n      );\r\n    } else {\r\n      alert(\"Debe completar todos los campos\");\r\n    }\r\n  };\r\n\r\n  const handleResponse = (e) => {\r\n    if (e.status == \"ok\") {\r\n      alert(\"Operacion actualizada\");\r\n      p.setBan(!p.ban)\r\n      p.setLBM(\"L\");\r\n    }\r\n    if (e.status == \"Error\") {\r\n      alert(\"No se pudo actualizar la operacion\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setOpr({ ...opr, [e.target.name]: e.target.value });\r\n  };\r\n  console.log(\"operacion: \", opr);\r\n\r\n  return (\r\n    <div className=\"flex justify-center h-2/4 items-center\">\r\n      <div className=\"m-5 rounded w-auto h-auto md:h-auto bg-green-300 flex flex-col p-5 text-center font-sans\">\r\n        <h2 className=\"text-2xl\">Modificar operacion</h2>\r\n        <input\r\n          name=\"concepto\"\r\n          className=\"m-3  md:m-5  p-2\"\r\n          onChange={handleChange}\r\n          value={opr.concepto}\r\n          placeholder=\"Concepto\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          name=\"monto\"\r\n          className=\"m-3  md:m-5  p-2\"\r\n          onChange={handleChange}\r\n          value={opr.monto}\r\n          placeholder=\"Monto\"\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          name=\"fecha\"\r\n          className=\"m-3  md:m-5  p-2\"\r\n          onChange={handleChange}\r\n          value={opr.fecha}\r\n          type=\"date\"\r\n        />\r\n\r\n        <div className=\"flex flex-col justify-center items-center\">\r\n          <button\r\n            onClick={() => handleUpdate()}\r\n            className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Actualizar\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => p.setLBM(\"L\")}\r\n            className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\ListComponents\\Delete.js",["80","81"],"import Fetch from \"../../services/Fetch\"\r\n\r\nexport default function Delete(p){\r\n\r\n    const handleDelete=()=>{\r\n        console.log(p.body)\r\n\r\n        Fetch(\r\n            \"POST\",\r\n            \"/operacion/deleteOperacion\",\r\n            { id_operacion:p.body.id_operacion },\r\n            localStorage.getItem(\"token\"),\r\n            handleResponse)\r\n    }\r\n    \r\n    const handleResponse = (e) => {\r\n        if (e.status == \"ok\") {\r\n          alert(\"Operacion borrada\");\r\n          p.setBan(!p.ban)\r\n          p.setLBM(\"L\")\r\n          \r\n        }\r\n        if (e.status == \"Error\") {\r\n          alert(\"No se pudo crear la operacion\");\r\n        }\r\n      };\r\n    \r\n    return(\r\n        <div className=\"flex justify-center h-2/4 items-center\">\r\n        <div className=\"m-5 rounded w-auto h-auto md:h-auto bg-green-300 flex flex-col p-5 text-center font-sans\">\r\n         <h2 className=\"text-2xl\">¿Desea eliminar la operacion?</h2>\r\n                \r\n         <div className=\"flex flex-col justify-center items-center\">\r\n            <button\r\n              onClick={() => handleDelete()}\r\n              className=\"bg-green-300 p-3 m-5 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\"\r\n            >\r\n              Eliminar\r\n            </button>\r\n            \r\n            <button onClick={()=>p.setLBM(\"L\")} className=\"bg-green-300 p-3 rounded-md  text-green-900 transform shadow-lg hover:bg-green-400 hover:scale-110 duration-200\">\r\n                Cancelar\r\n            </button>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}",["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":18,"column":29,"nodeType":"90","messageId":"91","endLine":18,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":18,"column":49,"nodeType":"90","messageId":"91","endLine":18,"endColumn":51},{"ruleId":"88","severity":1,"message":"89","line":23,"column":29,"nodeType":"90","messageId":"91","endLine":23,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":23,"column":34,"nodeType":"94","messageId":"95","endLine":23,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":23,"column":49,"nodeType":"90","messageId":"91","endLine":23,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":23,"column":56,"nodeType":"94","messageId":"95","endLine":23,"endColumn":58},{"ruleId":"88","severity":1,"message":"89","line":23,"column":71,"nodeType":"90","messageId":"91","endLine":23,"endColumn":73},{"ruleId":"88","severity":1,"message":"89","line":29,"column":18,"nodeType":"90","messageId":"91","endLine":29,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":34,"column":18,"nodeType":"90","messageId":"91","endLine":34,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":75,"column":33,"nodeType":"90","messageId":"91","endLine":75,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":86,"column":33,"nodeType":"90","messageId":"91","endLine":86,"endColumn":35},{"ruleId":"96","severity":1,"message":"97","line":35,"column":4,"nodeType":"98","endLine":35,"endColumn":9,"suggestions":"99"},{"ruleId":"88","severity":1,"message":"89","line":80,"column":14,"nodeType":"90","messageId":"91","endLine":80,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":82,"column":11,"nodeType":"90","messageId":"91","endLine":82,"endColumn":13},{"ruleId":"88","severity":1,"message":"100","line":46,"column":127,"nodeType":"90","messageId":"91","endLine":46,"endColumn":129},{"ruleId":"88","severity":1,"message":"89","line":8,"column":25,"nodeType":"90","messageId":"91","endLine":8,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":8,"column":45,"nodeType":"90","messageId":"91","endLine":8,"endColumn":47},{"ruleId":"88","severity":1,"message":"89","line":11,"column":25,"nodeType":"90","messageId":"91","endLine":11,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":11,"column":45,"nodeType":"90","messageId":"91","endLine":11,"endColumn":47},{"ruleId":"88","severity":1,"message":"89","line":13,"column":23,"nodeType":"90","messageId":"91","endLine":13,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":32,"column":18,"nodeType":"90","messageId":"91","endLine":32,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":37,"column":18,"nodeType":"90","messageId":"91","endLine":37,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":17,"column":22,"nodeType":"90","messageId":"91","endLine":17,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":23,"column":22,"nodeType":"90","messageId":"91","endLine":23,"endColumn":24},{"ruleId":"84","replacedBy":"101"},{"ruleId":"86","replacedBy":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'p'. Either include it or remove the dependency array.","ArrayExpression",["105"],"Expected '!==' and instead saw '!='.",["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [ban, p]",{"range":"108","text":"109"},[983,988],"[ban, p]"]