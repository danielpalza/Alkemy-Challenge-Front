[{"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js":"1","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js":"2","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js":"3","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js":"4","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js":"5","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js":"6","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js":"7","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js":"8","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js":"9"},{"size":220,"mtime":1612377246416,"results":"10","hashOfConfig":"11"},{"size":1370,"mtime":1612464515880,"results":"12","hashOfConfig":"11"},{"size":566,"mtime":1612382084389,"results":"13","hashOfConfig":"11"},{"size":127,"mtime":1612379488135,"results":"14","hashOfConfig":"11"},{"size":997,"mtime":1612467827342,"results":"15","hashOfConfig":"11"},{"size":735,"mtime":1612474364620,"results":"16","hashOfConfig":"11"},{"size":2394,"mtime":1612473202051,"results":"17","hashOfConfig":"11"},{"size":2004,"mtime":1612474440959,"results":"18","hashOfConfig":"11"},{"size":728,"mtime":1612471532002,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"pnplt4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\index.js",[],["41","42"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\App.js",["43","44","45"],"import Main from \"./componentes/Main\";\nimport {useState} from \"react\"\nimport Inicio from \"./componentes/Inicio\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nfunction App() {\n  console.log(\"token:\", localStorage.getItem(\"token\"));\n  let [isLogin, setIsLogin] = useState(false)\n\n\n  //Comprabacion del token\n  const Auth = () => {\n    if (localStorage.getItem(\"token\")) {\n      let urlRoot = \"http://localhost:4000/usuario/auth\"; //Cambiar a la url donde se alojara la API\n      let xmlhttp = new XMLHttpRequest();\n      xmlhttp.open(\"GET\", urlRoot, true);\n      xmlhttp.onreadystatechange = function () {\n        if (this.readyState == 4 && this.status == 200) {\n          return JSON.parse(this.responseText).status == \"ok\" ? true : false;\n        }\n      };\n      xmlhttp.setRequestHeader(\"token\", localStorage.getItem(\"token\"));\n      xmlhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n      xmlhttp.send();\n    }\n  };\n  console.log(\"isLogin: \", isLogin)\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/inicio\" render={() => (isLogin ? <Redirect exact to=\"/\" /> : <Inicio isLogin={setIsLogin}/>)} />\n\n        <Route\n          exact\n          path=\"/\"\n          render={() => (Auth()  ? <Redirect to=\"/inicio\" /> : <Main />)}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Add.js",["46"],"import Fetch from \"../services/Fetch\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Add() {\r\n  return (\r\n    <form onSubmit={console.log(\"enviado\")}>\r\n      <input name=\"tipo\" placeholder=\"Tipo\" type=\"text\" />\r\n      <input name=\"concepto\" placeholder=\"Concepto\" type=\"text\" />\r\n      <input name=\"monto\" placeholder=\"Monto\" type=\"text\" />\r\n      <input name=\"fecha\" placeholder=\"Fecha\" type=\"text\" />\r\n      <input type=\"submit\" value=\"Enviar\" />\r\n      <Link to=\"/\"><button>Regresar a inicio</button></Link>  \r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\List.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Main.js",[],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\services\\Fetch.js",["47","48","49","50"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Register.js",["51"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio\\Login.js",["52"],"D:\\Proyectos\\Alkemy\\Alkemy-Challenge\\app-administracion\\src\\componentes\\Inicio.js",["53","54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":23,"column":29,"nodeType":"62","messageId":"63","endLine":23,"endColumn":31},{"ruleId":"60","severity":1,"message":"61","line":23,"column":49,"nodeType":"62","messageId":"63","endLine":23,"endColumn":51},{"ruleId":"60","severity":1,"message":"61","line":24,"column":55,"nodeType":"62","messageId":"63","endLine":24,"endColumn":57},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":8,"column":25,"nodeType":"62","messageId":"63","endLine":8,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":8,"column":45,"nodeType":"62","messageId":"63","endLine":8,"endColumn":47},{"ruleId":"60","severity":1,"message":"61","line":11,"column":25,"nodeType":"62","messageId":"63","endLine":11,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":11,"column":45,"nodeType":"62","messageId":"63","endLine":11,"endColumn":47},{"ruleId":"60","severity":1,"message":"61","line":13,"column":23,"nodeType":"62","messageId":"63","endLine":13,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":7,"column":9,"nodeType":"66","messageId":"67","endLine":7,"endColumn":13},{"ruleId":"64","severity":1,"message":"69","line":2,"column":50,"nodeType":"66","messageId":"67","endLine":2,"endColumn":58},{"ruleId":"64","severity":1,"message":"70","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":20},{"ruleId":"64","severity":1,"message":"71","line":9,"column":15,"nodeType":"66","messageId":"67","endLine":9,"endColumn":18},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Fetch' is defined but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","'Redirect' is defined but never used.","'isRegister' is assigned a value but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]